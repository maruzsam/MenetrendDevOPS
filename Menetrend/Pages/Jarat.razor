@page "/jarat"
@using Menetrend.Data
@using Menetrend.Models
@using MudBlazor
@inject JaratServices jaratService
@inject AllomasServices allomasService

@if (jaratList == null || allomasList == null)
{
    <p><em>Lóding...</em></p>
}
else
{
    @if (!isVisible)
    {        
        <MudPaper Elevation="2" Class="pa-5 mt-2">
            <MudForm>
                <MudSelect Dense="true" Label="Honnan" T="string" @bind-Value="@from" Required="true" RequiredError="Kötelező megadni honnan szeretnél menni.">
                    @foreach (var item in allomasList)
                    {
                        <MudSelectItem Value="item.Id">@item.Nev</MudSelectItem>
                    }
                </MudSelect>
                <MudSelect Dense="true" Label="Hova" T="string" @bind-Value="@to" Required="true" RequiredError="Kötelező megadni hova szeretnél menni.">
                    @foreach (var item in allomasList)
                    {
                        <MudSelectItem Value="item.Id">@item.Nev</MudSelectItem>
                    }
                </MudSelect>
                <MudTimePicker Label="Dátum és idő" Class="my-3" TimeFormat="hh:mm" @bind-time="@date"></MudTimePicker>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@Search">Keresés</MudButton>
            </MudForm>
        </MudPaper>
    }
}

@if (isVisible)
{    
    <MudContainer Class="mt-2">
        <MudPaper>
            <MudDataGrid @ref="dataGrid" Items="@keresesJaratList" Filterable="true" Groupable="true" GroupExpanded="false" Dense="true">
                <ToolBarContent>
                    <div>
                        <MudText Typo="Typo.h5">Járatok</MudText>
                        @foreach (var allomas in allomasList)
                        {
                            if(allomas.Id == from)
                            {
                                honnan = allomas.Nev;
                            }
                            if (allomas.Id == to)
                            {
                                hova = allomas.Nev;
                            }
                        }
                        <MudText Typo="Typo.h6">@honnan - @hova - @date-tól/től</MudText>
                    </div>
                    <MudSpacer />
                    <MudTooltip Text="Minden szűrő törlése">
                        <MudIconButton Icon="@Icons.Material.Filled.FilterAltOff" Color="Color.Secondary" Size="Size.Small" Variant="Variant.Filled" Class="mr-4" OnClick="@ClearFilter" />
                    </MudTooltip>
                    <MudTooltip Text="Minden csoport kinyitása">
                        <MudIconButton Icon="@Icons.Material.Filled.Expand" Color="Color.Secondary" Size="Size.Small" Variant="Variant.Filled" Class="mr-4" OnClick="@ExpandAllGroups" />
                    </MudTooltip>
                    <MudTooltip Text="Mindet csoport összecsukása">
                        <MudIconButton Icon="@Icons.Material.Filled.Compress" Color="Color.Secondary" Size="Size.Small" Variant="Variant.Filled" OnClick="@CollapseAllGroups" />
                    </MudTooltip>
                </ToolBarContent>
                <Columns>
                    <HierarchyColumn T="Jarat" />
                    <PropertyColumn Property="x => x.Indulas" Title="Indulás" Filterable="true" Sortable="true" Groupable="true"  />
                    <PropertyColumn Property="x => x.Erkezes" Title="Érkezés" Filterable="true" Sortable="true" Groupable="true" />
                    <TemplateColumn CellClass="d-flex justify-start" Title="Művelet" Groupable="false" Sortable="false">
                        <CellTemplate>
                            <MudTooltip Text="Vásárlás">
                                <MudIconButton Icon="@Icons.Material.Filled.AttachMoney" Color="Color.Success" Size="Size.Small" Variant="Variant.Filled" Href=@($"jaratBuy/{context.Item.Id}") />
                            </MudTooltip>
                        </CellTemplate>
                    </TemplateColumn>
                </Columns>
                <PagerContent>
                    <MudDataGridPager T="Models.Jarat" RowsPerPageString="Sor, oldalanként" PageSizeOptions="new int[] { 25, 50, 100 }" />
                </PagerContent>
            </MudDataGrid>
        </MudPaper>
    </MudContainer>
}


@code {
    private List<Menetrend.Models.Jarat>? jaratList { get; set; }
    private List<Menetrend.Models.Jarat>? keresesJaratList { get; set; }
    private List<Menetrend.Models.Allomas>? allomasList { get; set; }
    private Models.Jarat jaratAdd { get; set; }
    MudDataGrid<Models.Jarat> dataGrid;    


    protected override async Task OnInitializedAsync()
    {
        jaratList = await jaratService.GetAll();           
        allomasList = await allomasService.GetAll();
    }

    string from;
    string to;
    string honnan;
    string hova;
    TimeSpan? date = new TimeSpan(00, 00, 00);
    bool isVisible = false;

    async void Search()
    {
        string datum = date.ToString();
        datum = datum.Substring(0, datum.Length - 3);
        // from = "ObjectId(\"" + from + "\")";
        // to = "ObjectId(\"" + to + "\")";
        TimeSpan datumTime = TimeSpan.Parse(datum);
        keresesJaratList = new List<Menetrend.Models.Jarat>();
        foreach (var jarat in jaratList)
        {
            TimeSpan jaratIndulas = TimeSpan.Parse(jarat.Indulas);
            if (datumTime <= jaratIndulas && jarat.Indulo_allomasID == from && jarat.Cel_allomasID == to)
            {
                
                jaratAdd = await jaratService.GetAsync(jarat.Id);
                keresesJaratList.Add(jaratAdd);
            }
        }
        Console.WriteLine(keresesJaratList);
        isVisible = true;
        StateHasChanged();
    }

    void ExpandAllGroups()
    {
        dataGrid?.ExpandAllGroups();
    }

    void CollapseAllGroups()
    {
        dataGrid?.CollapseAllGroups();
    }

    public async Task ClearFilter()
    {
        await (dataGrid?.ClearFiltersAsync());
    }
}